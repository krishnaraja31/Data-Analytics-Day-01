# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_3LEa1IkmFOH3p1QITkqoaphXDe8yN05
"""

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)
#Head is one operations the operations is called defult first to 5 print
#and the given n row print to give numbers that n rows print

print(rk.head(10))

# Create sample data with missing values
data = {
    'name': ['John', 'Emma', 'Michael', 'Sarah', 'David', 'Lisa', 'Tom', 'Anna'],
    'age': [25, np.nan, 35, 28, np.nan, 31, 42, 27],
    'salary': [50000, 60000, np.nan, 55000, 65000, np.nan, 70000, 52000],
    'department': ['IT', 'HR', 'IT', np.nan, 'Finance', 'HR', np.nan, 'IT'],
    'experience': [2, 4, 8, 3, np.nan, 5, 10, np.nan]
}

# Create DataFrame
df = pd.DataFrame(data)

# Display the DataFrame
print("\nDataset with missing values:")
print(df)

# Display info about missing values
print("\nMissing values count per column:")
print(df.isnull().sum())

# Save to CSV (optional)
df.to_csv('sample_data_with_missing_values.csv', index=False)

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)
#loc this is one opeartion
#loc is one opeartion this opeartions is helps to set row print
print(rk.loc[0])

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)
#iloc is one type of thee operation .this opeartion nth row and n th coloums given data
print(rk.iloc[0,2])

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)
#tail is one opeartion the opeartion helps to last 5 rows print defult
#and the given n th rows given the last to nth rows print
print(rk.tail(5))

import pandas as pd

# Specify the file name
file_name = "tested.csv"

# Read the CSV file into a DataFrame
rk = pd.read_csv(file_name)
#this is slicing process :9 means 9 rows and specifiuic coloums print

# Display the first 10 rows of the specified columns

print(rk.loc[:9, ['PassengerId', 'Survived']])

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)
#drop is one type of opeartion this opeartion is help to delete the one opeartion
#The axis parameter specifies whether to drop columns (axis=1) or rows (axis=0).
#The inplace parameter determines whether to modify the original DataFrame or return a new one.
rk.drop(["PassengerId", "Survived"], axis = 1, inplace = True)

print(rk.head(10))

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)
#dtypes is one types opeartion this opeartion is helps to in the coloum which data types is stoe the data is print

print(rk.dtypes)

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)
#the data types, number of non-null entries, and memory usage

print(rk.info())

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)
#coloums means how coloums is theree the coloums is print

print(rk.columns)

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)
#shape is one opeartion this opeartions is help to how many coloums and rows



print(rk.shape)

#Selecting a single columns
import pandas as pd
file_name=("tested.csv")
# index_col parameter is used in methods like read_csv() to specify which column (or columns) to use
#particlar coloum print
rk=pd.read_csv(file_name, index_col ="PassengerId")
#and given suitbale coloum
first = rk["Name"]

print(first.head(10))

import pandas as pd

file_name = "tested.csv"
rk = pd.read_csv(file_name)

# Assign the same value 'nidadvole' to all rows in the new 'address' column
df1 = rk.assign(address='nidadvole')

# Print the first row
print(df1.head(1))

#Selecting multiple columns
import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name, index_col ="PassengerId")
first = rk[["Name","Sex","Ticket"]]
print(first)

#Selecting a single row
import pandas as pd

# Specify the file name
file_name = "tested.csv"

# Read the CSV file into a DataFrame
rk = pd.read_csv(file_name)

# Set the index to the column containing names (if it exists)
rk.set_index("Name", inplace=True)  # Replace "Name" with the actual column name

# Select and print the row for "Kelly, Mr. James"
first = rk.loc["Kelly, Mr. James"]
print(first)

import pandas as pd

# Specify the file name
file_name = "tested.csv"

# Read the CSV file into a DataFrame
rk = pd.read_csv(file_name)

# Set the index to the column containing names (if it exists)
# Replace "Name" with the actual column name from the file
rk.set_index("Name", inplace=True)

# Select and print the rows for "Kelly, Mr. James" and "Wirz, Mr. Albert"
# Ensure there are no leading/trailing spaces in the names
first = rk.loc[["Kelly, Mr. James", "Wirz, Mr. Albert"]]
print(first)

import pandas as pd

# Specify the file name
file_name = "tested.csv"

# Read the CSV file into a DataFrame, setting "Name" as the index column
rk = pd.read_csv(file_name, index_col="Name")

# Strip any leading/trailing spaces in the column names to ensure consistency
rk.columns = rk.columns.str.strip()

# Select the desired columns
first = rk.loc[:, ["PassengerId", "Pclass", "Age"]]

# Print the result
print(first)

import pandas as pd
file_name=("tested.csv")
rk=pd.read_csv(file_name)

print(rk.describe())